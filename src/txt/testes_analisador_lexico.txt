
Failed tests
Test 1: Tokens, identificadores e operadores
Test 2: identificadores inválidos (criar um padrão para o erro, imprimir uma mensagem e não chamar return)
Test 3: Números
Test 4: Operadores compostos
Test 5: Strings
Test 6: Strings
Test 7: Strings
Test 8: Strings
Test 9: Strings e expressões
Test 10: Strings e expressões
Test 11: Strings e expressões
Test 12: Comentarios
Test 13: Não juntar comentarios
Test 1: Tokens, identificadores e operadores
Incorrect program output
--- Input ---
if ( a5 > $bba + _1 )

--- Program output ---
IF: 258 if
40 if
ID: 256 a5
62 a5
ID: 256 $bba
43 $bba
ID: 256 _1
41 _1

--- Expected output (exact text)---
258 if
40 (
256 a5
62 >
256 $bba
43 +
256 _1
41 )

Test 2: identificadores inválidos (criar um padrão para o erro, imprimir uma mensagem e não chamar return)
Incorrect program output
--- Input ---
a$ $$ $ $_$

--- Program output ---
ID: 256 a
ID: 256 $
ID: 256 $
ID: 256 $
ID: 256 $
ID: 256 $_
ID: 256 $

--- Expected output (exact text)---
Erro: Identificador inválido: a$
Erro: Identificador inválido: $$
256 $
Erro: Identificador inválido: $_$

Test 3: Números
Incorrect program output
--- Input ---
1 1.0 1.1 2.000001 10e-9 10.34e+9 0.4e31

--- Program output ---
Int: 259 1
Float: 260 1.0
Float: 260 1.1
Float: 260 2.000001
Float: 260 10e-9
Float: 260 10.34e+9
Float: 260 0.4e31

--- Expected output (exact text)---
259 1
260 1.0
260 1.1
260 2.000001
260 10e-9
260 10.34e+9
260 0.4e31

Test 4: Operadores compostos
Incorrect program output
--- Input ---
if( $_a >= 1e-5 )

--- Program output ---
IF: 258 if
40 if
ID: 256 $_a
MAIORQ: 261 >=
Float: 260 1e-5
41 1e-5

--- Expected output (exact text)---
258 if
40 (
256 $_a
261 >=
260 1e-5
41 )

Test 5: Strings
Incorrect program output
--- Input ---
 a $_ $ = "Um texto";

--- Program output ---
ID: 256 a
ID: 256 $_
ID: 256 $
61 $
String: 265 "Um texto"
59 "Um texto"

--- Expected output (exact text)---
256 a
256 $_
256 $
61 =
265 Um texto
59 ;

Test 6: Strings
Incorrect program output
--- Input ---
 $ = "Uma String" "outra\t string" "d'ouro";

--- Program output ---
ID: 256 $
61 $
String: 265 "Uma String"
34 "Uma String"
ID: 256 outra
92 outra
ID: 256 t
ID: 256 string
String: 265 " "
ID: 256 d
39 d
ID: 256 ouro
34 ouro
59 ouro

--- Expected output (exact text)---
256 $
61 =
265 Uma String
265 outra\t string
265 d'ouro
59 ;

Test 7: Strings
Incorrect program output
--- Input ---
 a = "Um \"texto" 'd\'água' 'd''ouro " ""';

--- Program output ---
ID: 256 a
61 a
String: 265 "Um \"texto"
String: 265 'd\'água'
String: 265 'd''ouro " ""'
59 'd''ouro " ""'

--- Expected output (exact text)---
256 a
61 =
265 Um "texto
265 d'água
265 d'ouro " ""
59 ;

Test 8: Strings
Incorrect program output
--- Input ---
 a = "Um ""texto \o/ //\\/* */" ;
`  string ' "/*" '
*/ //
`;


--- Program output ---
ID: 256 a
61 a
String: 265 "Um "
34 "Um "
ID: 256 texto
92 texto
ID: 256 o
47 o
Comentario: 267 //\\/* */" ;
96 //\\/* */" ;
ID: 256 string
String: 265 ' "/*" '
42 ' "/*" '
47 ' "/*" '
Comentario: 267 //
96 //
59 //

--- Expected output (exact text)---
256 a
61 =
265 Um "texto \o/ //\\/* */
59 ;
266   string ' "/*" '
*/ //

59 ;

Test 9: Strings e expressões
Incorrect program output
--- Input ---
`Hora atual: $ !`

--- Program output ---
96
ID: 256 Hora
ID: 256 atual
58 atual
ID: 256 $
33 $
96 $

--- Expected output (exact text)---
266 Hora atual: $ !

Test 10: Strings e expressões
Incorrect program output
--- Input ---
`Hora atual: ${agora} horas!`

--- Program output ---
96
ID: 256 Hora
ID: 256 atual
58 atual
ID: 256 $
123 $
ID: 256 agora
125 agora
ID: 256 horas
33 horas
96 horas

--- Expected output (exact text)---
266 Hora atual:
268 agora
266  horas!

Test 11: Strings e expressões
Incorrect program output
--- Input ---
`Hora atual: ${$agora} horas n'água!`

--- Program output ---
96
ID: 256 Hora
ID: 256 atual
58 atual
ID: 256 $
123 $
ID: 256 $agora
125 $agora
ID: 256 horas
ID: 256 n
39 n
-61 n
-95 n
ID: 256 gua
33 gua
96 gua

--- Expected output (exact text)---
266 Hora atual:
268 $agora
266  horas n'água!

Test 12: Comentarios
Incorrect program output
--- Input ---
 a = 2; /* Um comentario */

--- Program output ---
ID: 256 a
61 a
Int: 259 2
59 2
Comentario: 267 /* Um comentario */

--- Expected output (exact text)---
256 a
61 =
259 2
59 ;
267 /* Um comentario */

Test 13: Não juntar comentarios
Incorrect program output
--- Input ---
 a = 2; /* Um comentario */ // outro */

--- Program output ---
ID: 256 a
61 a
Int: 259 2
59 2
Comentario: 267 /* Um comentario */
Comentario: 267 // outro */

--- Expected output (exact text)---
256 a
61 =
259 2
59 ;
267 /* Um comentario */
267 // outro */

Summary of tests
+------------------------------+
| 14 tests run/ 1  test passed |
+------------------------------+
